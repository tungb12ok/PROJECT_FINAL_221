@page
@model WEB.Pages.ChatModel
@{
ViewData["Title"] = "Chat";
}

<style>
    .chat-app {
        display: flex;
        height: 100vh;
        background-color: #f1f2f6;
    }

    .chat-sidebar {
        width: 300px;
        background-color: #fff;
        border-right: 1px solid #ddd;
        overflow-y: auto;
    }

    .chat-main {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .chat-header {
        padding: 15px;
        background-color: #007bff;
        color: #fff;
        display: flex;
        align-items: center;
    }

    .chat-messages {
        flex: 1;
        padding: 15px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
    }

    .chat-message {
        margin-bottom: 15px;
        display: flex;
    }

    .chat-message.user {
        justify-content: flex-end;
    }

    .chat-message.other {
        justify-content: flex-start;
    }

    .chat-bubble {
        max-width: 60%;
        padding: 10px;
        border-radius: 20px;
        position: relative;
        display: inline-block;
    }

    .chat-bubble.user {
        background-color: #007bff;
        color: #fff;
        text-align: right;
    }

    .chat-bubble.other {
        background-color: #e9ecef;
        color: #000;
        text-align: left;
    }

    .chat-input {
        padding: 15px;
        background-color: #fff;
        border-top: 1px solid #ddd;
        display: flex;
        align-items: center;
    }

    .chat-input input {
        flex: 1;
        padding: 10px;
        border-radius: 20px;
        border: 1px solid #ddd;
        margin-right: 10px;
    }

    .chat-input button {
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 20px;
        cursor: pointer;
    }
</style>

<div class="chat-app">
    <div class="chat-sidebar">
        <h2 class="text-center p-3">Chat Application</h2>
        <ul id="userList" class="list-group">
            @foreach (var user in ViewBag.listView)
            {
            <form method="get">
                    <input name="receiver" value="@user.UserFrom.UserId" hidden />
                    <button class="btn btn-light w-100 text-left">@user.UserFrom.Username</button>
            </form>
            }
        </ul>
    </div>
    @if (ViewBag.flag != 0)
    {
    <div class="chat-main">
        <div class="chat-header">
            Chat with @Model.UserTo.Username
        </div>
        <div id="messagesList" class="chat-messages">
            @foreach (var message in Model.Messages)
            {
            var messageClass = message.FromUserId == Model.UserCurrent.UserId ? "user" : "other";
            <div class="chat-message @messageClass">
                <div class="chat-bubble @messageClass">
                    @message.MessageText
                </div>
            </div>
            }
        </div>
        <div class="chat-input">
            <input type="text" id="messageInput" placeholder="Type a message..." />
            <button id="sendButton">Send</button>
        </div>
    </div>
    }
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
@if (Model.UserTo != null)
{
<script>
    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (message) {
        var li = document.createElement("div");
        var bubble = document.createElement("div");
        bubble.textContent = message.messageText;
        bubble.classList.add("chat-bubble");
        li.classList.add("chat-message");
        if (message.fromUserId == @Model.UserCurrent.UserId) {
            li.classList.add("user");
            bubble.classList.add("user");
        } else {
            li.classList.add("other");
            bubble.classList.add("other");
        }
        li.appendChild(bubble);
        document.getElementById("messagesList").appendChild(li);

        var messageContainer = document.getElementById("messagesList");
        messageContainer.scrollTop = messageContainer.scrollHeight;
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;

        var userId = @Model.UserCurrent.UserId;
        var receiverId = @Model.UserTo.UserId;
        var group = userId < receiverId ? `user${userId}-user${receiverId}` : `user${receiverId}-user${userId}`;
        connection.invoke("JoinGroup", group).catch(function (err) {
            return console.error(err.toString());
        });
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var messageText = document.getElementById("messageInput").value;

        var message = {
            fromUserId: @Model.UserCurrent.UserId,
            toUserId: @Model.UserTo.UserId,
            messageText: messageText,
            sentTime: new Date().toISOString()
        };

        connection.invoke("SendMessage", message).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("messageInput").value = '';
        event.preventDefault();
    });
</script>
}
